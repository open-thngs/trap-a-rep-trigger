name: "Toit Firmware Generation"
on:
  workflow_dispatch:
  push:
    tags:
      - 'firmware*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TOIT_VERSION: "v2.0.0-alpha.145"
      ENVELOPE_FILE: "firmware-esp32s3"
      FIRMWARE_FILE: "heimdall-esp32s3"
    steps:
      - uses: actions/checkout@v4
      - uses: toitlang/action-setup@v1
        with:
          toit-version: ${{ env.TOIT_VERSION }}
      - name: Download and unpack envelope
        working-directory: src/toit
        run: |
          wget https://github.com/toitlang/envelopes/releases/download/${{ env.TOIT_VERSION }}/${{ env.ENVELOPE_FILE }}.envelope.gz
          gunzip ${{ env.ENVELOPE_FILE }}.envelope.gz
      - name: Build toit firmware
        working-directory: src/toit
        run: |
          toit.pkg install
          toit.compile -w komodo.snapshot src/komodo.toit
          ${{env.TOIT_INSTALL_DIR}}/toit/tools/firmware -e ${{ env.ENVELOPE_FILE }}.envelope container install komodo komodo.snapshot
          ${{env.TOIT_INSTALL_DIR}}/toit/tools/firmware extract -e ${{ env.ENVELOPE_FILE }}.envelope -o ${{env.FIRMWARE_FILE}}.bin
      - name: Upload envelope
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.FIRMWARE_FILE}}.bin
          path: src/toit/${{env.FIRMWARE_FILE}}.bin

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Create VERSION file
        run: echo "${{ github.ref }}" > VERSION

      - name: Upload VERSION file
        id: upload-version-file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./VERSION
          asset_name: VERSION
          asset_content_type: text/plain

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: src/toit/${{env.FIRMWARE_FILE}}.bin
          asset_name: ${{env.FIRMWARE_FILE}}.bin
          asset_content_type: application/octet-stream